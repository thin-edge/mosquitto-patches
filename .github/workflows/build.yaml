name: Build
on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
jobs:
  build-debian:
    name: Build ${{ matrix.job.image }} ${{ matrix.job.debian_arch }} - ${{ matrix.job.platform }}
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        job:
          - { image: debian-12, platform: linux/arm/v5, debian_arch: armel }
          - { image: debian-12, platform: linux/arm/v7, debian_arch: armhf }
          - { image: debian-12, platform: linux/arm64, debian_arch: arm64 }
          - { image: debian-12, platform: linux/amd64, debian_arch: amd64 }

          - { image: debian-13, platform: linux/arm/v5, debian_arch: armel }
          - { image: debian-13, platform: linux/arm/v7, debian_arch: armhf }
          - { image: debian-13, platform: linux/arm64, debian_arch: arm64 }
          - { image: debian-13, platform: linux/amd64, debian_arch: amd64 }

          - { image: ubuntu-24.04, platform: linux/arm/v7, debian_arch: armhf }
          - { image: ubuntu-24.04, platform: linux/arm64, debian_arch: arm64 }
          - { image: ubuntu-24.04, platform: linux/amd64, debian_arch: amd64 }

          - { image: ubuntu-25.04, platform: linux/arm/v7, debian_arch: armhf }
          - { image: ubuntu-25.04, platform: linux/arm64, debian_arch: arm64 }
          - { image: ubuntu-25.04, platform: linux/amd64, debian_arch: amd64 }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - uses: taiki-e/install-action@just

      - name: Patch
        run: just IMAGE=${{ matrix.job.image }} PLATFORM=${{ matrix.job.platform }} patch-debian

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.image }}-${{ matrix.job.debian_arch }}
          path: debian/dist/${{ matrix.job.image }}/*

  publish:
    needs: [build-debian]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup python required by cloudsmith cli
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: debian/dist/

      - name: Publish
        if: env.PUBLISH_TOKEN
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: |
          ls -l debian/dist/*
          ./ci/publish.sh --path ./debian/dist
